{"componentChunkName":"component---src-templates-section-js","path":"/reference/python","result":{"data":{"mdx":{"slug":"reference/python-snippets","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Python snippets\",\n  \"date\": \"2020-08-11T00:00:00.000Z\",\n  \"slug\": \"reference/python\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Pickle\"), mdx(\"h2\", null, \"Pickle an object.\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\"\n  }, \"\\n          \", mdx(\"code\", _extends({\n    parentName: \"deckgo-highlight-code\"\n  }, {\n    \"slot\": \"code\"\n  }), \"import pickle\\n\\npickle.dump(object, open(\\\"save.p\\\", \\\"wb\\\"))\"), \"\\n        \"), mdx(\"h2\", null, \"Unpickle an object.\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\"\n  }, \"\\n          \", mdx(\"code\", _extends({\n    parentName: \"deckgo-highlight-code\"\n  }, {\n    \"slot\": \"code\"\n  }), \"import pickle\\n\\ndata = pickle.load(open(\\\"save.p\\\", \\\"rb\\\"))\"), \"\\n        \"), mdx(\"h1\", null, \"Pandas\"), mdx(\"h2\", null, \"Set column as index when loading CSV file in pandas\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\"\n  }, \"\\n          \", mdx(\"code\", _extends({\n    parentName: \"deckgo-highlight-code\"\n  }, {\n    \"slot\": \"code\"\n  }), \"import pandas as pd\\n\\ndf = pd.read_csv(\\\"data.csv\\\", index_col=0)\"), \"\\n        \"), mdx(\"h2\", null, \"Convert list of dictionaries into dataframe\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\"\n  }, \"\\n          \", mdx(\"code\", _extends({\n    parentName: \"deckgo-highlight-code\"\n  }, {\n    \"slot\": \"code\"\n  }), \"import pandas as pd\\n\\npd.DataFrame(list_of_dicts)\"), \"\\n        \"), mdx(\"h1\", null, \"Enumerations\"), mdx(\"h2\", null, \"Get enum from string name\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\"\n  }, \"\\n          \", mdx(\"code\", _extends({\n    parentName: \"deckgo-highlight-code\"\n  }, {\n    \"slot\": \"code\"\n  }), \"from enum import Enum\\nclass Build(Enum):\\n    debug = 200\\n    build = 400\\n\\nval = Build['debug']\"), \"\\n        \"), mdx(\"h1\", null, \"PyTorch\"), mdx(\"h2\", null, \"Types of optimizers\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\"\n  }, \"\\n          \", mdx(\"code\", _extends({\n    parentName: \"deckgo-highlight-code\"\n  }, {\n    \"slot\": \"code\"\n  }), \"optimizer = optim.SGD(model.parameters(), lr=0.01, momentum=0.9)\\noptimizer = optim.Adam([var1, var2], lr=0.0001)\"), \"\\n        \"), mdx(\"h2\", null, \"Optimizer general routine\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"python\"\n  }, \"\\n          \", mdx(\"code\", _extends({\n    parentName: \"deckgo-highlight-code\"\n  }, {\n    \"slot\": \"code\"\n  }), \"for input, target in dataset:\\n    optimizer.zero_grad()\\n    output = model(input)\\n    loss = loss_fn(output, target)\\n    loss.backward()\\n    optimizer.step()\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Python snippets","slug":"reference/python"}}},"pageContext":{"slug":"reference/python-snippets"}}}